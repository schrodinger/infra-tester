test_plan:
  name: ResourceA
  tests:
    - name: MyFirstTest
      vars:
        check_condition: true
        complex_object: &complex_object
          id: 0
          count: 0
          str: "string"
          seq:
            - one
            - two
          map:
            key: value
      plan:
        assertions:
          - type: PlanFailsWithError
            error_message_contains: Intented to fail

    - name: MySecondTest
      with_clean_state: true
      vars:
        check_condition: false
        complex_object:
          <<: *complex_object
          id: 1
          count: 1
      plan:
        assertions:
          - type: PlanSucceeds
      apply:
        is_idempotent: true
        assertions:
          - type: ResourcesAffected
            added: 1

    - name: MyThirdTest
      vars:
        check_condition: false
        complex_object:
          <<: *complex_object
          id: 2
          count: 2
      apply:
        ensure_idempotent: true
        assertions:
          - type: ApplySucceeds

          - type: OutputEqual
            output_name: sample_output
            value: it's working

    - name: MyFourthTest
      vars:
        check_condition: false
        complex_object:
          <<: *complex_object
      apply:
        is_idempotent: true
        assertions:
          - type: NoResourcesAffected

    - name: MyFifthTest
      vars:
        check_condition: false
        complex_object:
          <<: *complex_object
      apply:
        assertions:
          - type: OutputsAreEqual
            output_names:
              - sample_output
              - another_output
              - yet_another_output

          - type: OutputContains
            output_name: sample_output
            value: working

          - type: OutputMatchesRegex
            output_name: a_fourth_output
            regex: strings \w+ \d+ apple \d\s+\w+
